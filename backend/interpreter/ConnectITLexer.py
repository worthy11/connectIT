# Generated from ConnectIT.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,40,326,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,
        1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,
        11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,
        14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,
        18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,
        19,1,19,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,
        23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,
        26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,
        28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,
        31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,
        33,1,33,1,34,1,34,5,34,235,8,34,10,34,12,34,238,9,34,1,35,3,35,241,
        8,35,1,35,4,35,244,8,35,11,35,12,35,245,1,35,1,35,4,35,250,8,35,
        11,35,12,35,251,3,35,254,8,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,285,8,36,1,36,
        1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,3,37,311,8,37,
        1,37,1,37,1,38,4,38,316,8,38,11,38,12,38,317,1,38,1,38,1,39,3,39,
        323,8,39,1,39,1,39,0,0,40,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
        20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
        31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,1,0,4,3,
        0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,
        9,9,32,32,339,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
        9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
        19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,
        29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,
        39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
        49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,
        59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,
        69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,
        79,1,0,0,0,1,81,1,0,0,0,3,86,1,0,0,0,5,92,1,0,0,0,7,98,1,0,0,0,9,
        104,1,0,0,0,11,106,1,0,0,0,13,108,1,0,0,0,15,115,1,0,0,0,17,119,
        1,0,0,0,19,121,1,0,0,0,21,123,1,0,0,0,23,126,1,0,0,0,25,130,1,0,
        0,0,27,132,1,0,0,0,29,137,1,0,0,0,31,140,1,0,0,0,33,142,1,0,0,0,
        35,144,1,0,0,0,37,152,1,0,0,0,39,157,1,0,0,0,41,170,1,0,0,0,43,172,
        1,0,0,0,45,175,1,0,0,0,47,177,1,0,0,0,49,180,1,0,0,0,51,183,1,0,
        0,0,53,186,1,0,0,0,55,193,1,0,0,0,57,199,1,0,0,0,59,206,1,0,0,0,
        61,208,1,0,0,0,63,210,1,0,0,0,65,218,1,0,0,0,67,225,1,0,0,0,69,232,
        1,0,0,0,71,240,1,0,0,0,73,255,1,0,0,0,75,288,1,0,0,0,77,315,1,0,
        0,0,79,322,1,0,0,0,81,82,5,85,0,0,82,83,5,78,0,0,83,84,5,73,0,0,
        84,85,5,84,0,0,85,2,1,0,0,0,86,87,5,76,0,0,87,88,5,65,0,0,88,89,
        5,89,0,0,89,90,5,69,0,0,90,91,5,82,0,0,91,4,1,0,0,0,92,93,5,83,0,
        0,93,94,5,72,0,0,94,95,5,65,0,0,95,96,5,80,0,0,96,97,5,69,0,0,97,
        6,1,0,0,0,98,99,5,77,0,0,99,100,5,79,0,0,100,101,5,68,0,0,101,102,
        5,69,0,0,102,103,5,76,0,0,103,8,1,0,0,0,104,105,5,44,0,0,105,10,
        1,0,0,0,106,107,5,61,0,0,107,12,1,0,0,0,108,109,5,67,0,0,109,110,
        5,76,0,0,110,111,5,79,0,0,111,112,5,83,0,0,112,113,5,69,0,0,113,
        114,5,68,0,0,114,14,1,0,0,0,115,116,5,45,0,0,116,117,5,45,0,0,117,
        118,5,62,0,0,118,16,1,0,0,0,119,120,5,42,0,0,120,18,1,0,0,0,121,
        122,5,43,0,0,122,20,1,0,0,0,123,124,5,60,0,0,124,125,5,45,0,0,125,
        22,1,0,0,0,126,127,5,60,0,0,127,128,5,60,0,0,128,129,5,45,0,0,129,
        24,1,0,0,0,130,131,5,45,0,0,131,26,1,0,0,0,132,133,5,83,0,0,133,
        134,5,72,0,0,134,135,5,79,0,0,135,136,5,87,0,0,136,28,1,0,0,0,137,
        138,5,73,0,0,138,139,5,70,0,0,139,30,1,0,0,0,140,141,5,91,0,0,141,
        32,1,0,0,0,142,143,5,93,0,0,143,34,1,0,0,0,144,145,5,69,0,0,145,
        146,5,76,0,0,146,147,5,83,0,0,147,148,5,69,0,0,148,149,5,32,0,0,
        149,150,5,73,0,0,150,151,5,70,0,0,151,36,1,0,0,0,152,153,5,69,0,
        0,153,154,5,76,0,0,154,155,5,83,0,0,155,156,5,69,0,0,156,38,1,0,
        0,0,157,158,5,82,0,0,158,159,5,69,0,0,159,160,5,80,0,0,160,161,5,
        69,0,0,161,162,5,65,0,0,162,163,5,84,0,0,163,164,5,32,0,0,164,165,
        5,87,0,0,165,166,5,72,0,0,166,167,5,73,0,0,167,168,5,76,0,0,168,
        169,5,69,0,0,169,40,1,0,0,0,170,171,5,60,0,0,171,42,1,0,0,0,172,
        173,5,60,0,0,173,174,5,61,0,0,174,44,1,0,0,0,175,176,5,62,0,0,176,
        46,1,0,0,0,177,178,5,62,0,0,178,179,5,61,0,0,179,48,1,0,0,0,180,
        181,5,61,0,0,181,182,5,61,0,0,182,50,1,0,0,0,183,184,5,33,0,0,184,
        185,5,61,0,0,185,52,1,0,0,0,186,187,5,82,0,0,187,188,5,69,0,0,188,
        189,5,80,0,0,189,190,5,69,0,0,190,191,5,65,0,0,191,192,5,84,0,0,
        192,54,1,0,0,0,193,194,5,84,0,0,194,195,5,73,0,0,195,196,5,77,0,
        0,196,197,5,69,0,0,197,198,5,83,0,0,198,56,1,0,0,0,199,200,5,77,
        0,0,200,201,5,69,0,0,201,202,5,84,0,0,202,203,5,72,0,0,203,204,5,
        79,0,0,204,205,5,68,0,0,205,58,1,0,0,0,206,207,5,40,0,0,207,60,1,
        0,0,0,208,209,5,41,0,0,209,62,1,0,0,0,210,211,5,82,0,0,211,212,5,
        69,0,0,212,213,5,84,0,0,213,214,5,85,0,0,214,215,5,82,0,0,215,216,
        5,78,0,0,216,217,5,83,0,0,217,64,1,0,0,0,218,219,5,82,0,0,219,220,
        5,69,0,0,220,221,5,84,0,0,221,222,5,85,0,0,222,223,5,82,0,0,223,
        224,5,78,0,0,224,66,1,0,0,0,225,226,5,78,0,0,226,227,5,85,0,0,227,
        228,5,77,0,0,228,229,5,66,0,0,229,230,5,69,0,0,230,231,5,82,0,0,
        231,68,1,0,0,0,232,236,7,0,0,0,233,235,7,1,0,0,234,233,1,0,0,0,235,
        238,1,0,0,0,236,234,1,0,0,0,236,237,1,0,0,0,237,70,1,0,0,0,238,236,
        1,0,0,0,239,241,5,45,0,0,240,239,1,0,0,0,240,241,1,0,0,0,241,243,
        1,0,0,0,242,244,7,2,0,0,243,242,1,0,0,0,244,245,1,0,0,0,245,243,
        1,0,0,0,245,246,1,0,0,0,246,253,1,0,0,0,247,249,5,46,0,0,248,250,
        7,2,0,0,249,248,1,0,0,0,250,251,1,0,0,0,251,249,1,0,0,0,251,252,
        1,0,0,0,252,254,1,0,0,0,253,247,1,0,0,0,253,254,1,0,0,0,254,72,1,
        0,0,0,255,284,5,42,0,0,256,257,5,114,0,0,257,258,5,101,0,0,258,285,
        5,100,0,0,259,260,5,98,0,0,260,261,5,108,0,0,261,262,5,117,0,0,262,
        285,5,101,0,0,263,264,5,103,0,0,264,265,5,114,0,0,265,266,5,101,
        0,0,266,267,5,101,0,0,267,285,5,110,0,0,268,269,5,119,0,0,269,270,
        5,104,0,0,270,271,5,105,0,0,271,272,5,116,0,0,272,285,5,101,0,0,
        273,274,5,98,0,0,274,275,5,108,0,0,275,276,5,97,0,0,276,277,5,99,
        0,0,277,285,5,107,0,0,278,279,5,121,0,0,279,280,5,101,0,0,280,281,
        5,108,0,0,281,282,5,108,0,0,282,283,5,111,0,0,283,285,5,119,0,0,
        284,256,1,0,0,0,284,259,1,0,0,0,284,263,1,0,0,0,284,268,1,0,0,0,
        284,273,1,0,0,0,284,278,1,0,0,0,285,286,1,0,0,0,286,287,5,42,0,0,
        287,74,1,0,0,0,288,310,5,42,0,0,289,290,5,115,0,0,290,291,5,116,
        0,0,291,292,5,114,0,0,292,293,5,105,0,0,293,294,5,112,0,0,294,295,
        5,101,0,0,295,311,5,100,0,0,296,297,5,100,0,0,297,298,5,111,0,0,
        298,299,5,116,0,0,299,300,5,116,0,0,300,301,5,101,0,0,301,311,5,
        100,0,0,302,303,5,103,0,0,303,304,5,114,0,0,304,305,5,97,0,0,305,
        306,5,100,0,0,306,307,5,105,0,0,307,308,5,101,0,0,308,309,5,110,
        0,0,309,311,5,116,0,0,310,289,1,0,0,0,310,296,1,0,0,0,310,302,1,
        0,0,0,311,312,1,0,0,0,312,313,5,42,0,0,313,76,1,0,0,0,314,316,7,
        3,0,0,315,314,1,0,0,0,316,317,1,0,0,0,317,315,1,0,0,0,317,318,1,
        0,0,0,318,319,1,0,0,0,319,320,6,38,0,0,320,78,1,0,0,0,321,323,5,
        13,0,0,322,321,1,0,0,0,322,323,1,0,0,0,323,324,1,0,0,0,324,325,5,
        10,0,0,325,80,1,0,0,0,10,0,236,240,245,251,253,284,310,317,322,1,
        6,0,0
    ]

class ConnectITLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    ID = 35
    NUMBER = 36
    COLOR = 37
    PATTERN = 38
    WS = 39
    NEWLINE = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'UNIT'", "'LAYER'", "'SHAPE'", "'MODEL'", "','", "'='", "'CLOSED'", 
            "'-->'", "'*'", "'+'", "'<-'", "'<<-'", "'-'", "'SHOW'", "'IF'", 
            "'['", "']'", "'ELSE IF'", "'ELSE'", "'REPEAT WHILE'", "'<'", 
            "'<='", "'>'", "'>='", "'=='", "'!='", "'REPEAT'", "'TIMES'", 
            "'METHOD'", "'('", "')'", "'RETURNS'", "'RETURN'", "'NUMBER'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUMBER", "COLOR", "PATTERN", "WS", "NEWLINE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "ID", "NUMBER", "COLOR", "PATTERN", 
                  "WS", "NEWLINE" ]

    grammarFileName = "ConnectIT.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


